{"version":3,"sources":["Container.module.css","CovidHeader.module.scss","CovidChart.module.scss","Container.js","CovidHeader.js","CovidChart.js","CountrySelector.js","App.js","serviceWorker.js","index.js","CountrySelector.module.scss"],"names":["module","exports","children","className","containerStyles","container","CovidHeader","covidHeaderStyles","covidHeader","CovidChart","country","useState","items","setItems","noResults","setNoResults","useEffect","window","scrollTo","fetch","Slug","method","redirect","then","res","json","result","length","fromDayOne","filter","elem","Confirmed","map","d","i","active","Recovered","Deaths","parsedDate","Date","parse","formattedDate","Intl","DateTimeFormat","year","month","day","format","confirmed","deaths","recovered","covidChartStyles","covidChart","header","Country","firstCase","firstDate","chart","width","data","margin","top","right","bottom","left","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","style","fontSize","stroke","strokeDasharray","itemStyle","color","wrapperStyle","backgroundColor","contentStyle","border","backgroundImage","labelStyle","marginBottom","verticalAlign","height","type","name","strokeWidth","dot","fill","CountrySelector","setCountry","apiCountries","setApiCountries","showSelectedCountries","setshowSelectedCountries","from","sort","a","b","localeCompare","CountrySelectorStyles","list","item","key","onClick","fixed","App","Container","appStyles","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1dc63ead.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3PaKm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"covidHeader\":\"CovidHeader_covidHeader__1_bwK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"covidChart\":\"CovidChart_covidChart__27iF-\",\"header\":\"CovidChart_header__2ts0u\",\"chart\":\"CovidChart_chart__3agjm\",\"country\":\"CovidChart_country__1_UeB\",\"firstCase\":\"CovidChart_firstCase__DzFJX\",\"firstDate\":\"CovidChart_firstDate__21qJ-\",\"noResults\":\"CovidChart_noResults__3rZOp\"};","import React from \"react\"\nimport containerStyles from \"./Container.module.css\"\n\nexport default ({ children }) => (\n  <div className={containerStyles.container}>{children}</div>\n)\n","import React from \"react\"\nimport covidHeaderStyles from \"./CovidHeader.module.scss\"\n\nfunction CovidHeader() {\n  return (\n    <div className={covidHeaderStyles.covidHeader}>\n      <h1>Normalized COVID-19 evolution by country</h1>\n      <p>\n        Normalized COVID-19 progress over time,\n        substracting recovered and death cases from confirmed cases.\n      </p>\n    </div>\n  );\n}\n\nexport default CovidHeader;\n","import React, { useState, useEffect } from 'react';\nimport { ResponsiveContainer, AreaChart, Area, CartesianGrid, Legend, XAxis, YAxis, Tooltip } from 'recharts';\nimport covidChartStyles from \"./CovidChart.module.scss\"\n\nfunction CovidChart({ country }) {\n  const [items, setItems] = useState([]);\n  const [noResults, setNoResults] = useState(false);\n\n  const legendStyle = {\n    right: 0,\n    fontSize: '11px',\n    color: '#A9ACB3',\n  }\n\n  const itemStyle = {\n    color: 'white',\n    fontSize: '0.8rem',\n  }\n\n  const wrapperStyle = {\n    backgroundColor: 'transparent',\n  }\n\n  const contentStyle = {\n    border: '0',\n    backgroundColor: 'transparent',\n    backgroundImage: 'linear-gradient(rgba(71, 84, 113, 0.8), rgba(48, 57, 76, 0.8))',\n  }\n\n  const labelStyle = {\n    marginBottom: '0.75rem',\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    setNoResults(false);\n\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow',\n    };\n\n    fetch(\"https://api.covid19api.com/total/country/\" + country.Slug, requestOptions)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          if (result.length === 0) {\n            setNoResults(true);\n          }\n\n          // Discard dates without any cases\n          const fromDayOne = result.filter((elem) => elem.Confirmed > 0);\n          setItems(fromDayOne.map(function(d, i) {\n            const active = d.Confirmed - d.Recovered - d.Deaths;\n            const parsedDate = Date.parse(d.Date);\n            const formattedDate = new Intl.DateTimeFormat(\"en-GB\", {\n              year: \"numeric\",\n              month: \"long\",\n              day: \"numeric\"\n            }).format(parsedDate);\n\n            return {\n              formattedDate: formattedDate,\n              active: active,\n              confirmed: d.Confirmed,\n              deaths: d.Deaths,\n              recovered: d.Recovered,\n            };\n          }));\n        }\n      )\n  }, [country]);\n\n  return (\n    <div className={covidChartStyles.covidChart}>\n      <div className={covidChartStyles.header}>\n        <h3 className={covidChartStyles.country}>{country.Country}</h3>\n        <h4 className={covidChartStyles.firstCase}>\n          First case:\n          <span className={covidChartStyles.firstDate}>\n            {items[0] ? items[0].formattedDate : ''}\n          </span>\n        </h4>\n      </div>\n      {noResults ? (\n        <div className={covidChartStyles.noResults}>\n          Sorry, no results for {country.Country}\n        </div>\n      ) : null}\n      <ResponsiveContainer className={covidChartStyles.chart} width=\"100%\">\n        <AreaChart data={items} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\n          <defs>\n            <linearGradient id=\"activeGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor=\"#21FF9F\" stopOpacity={0.8} />\n              <stop offset=\"95%\" stopColor=\"#21FF9F\" stopOpacity={0} />\n            </linearGradient>\n          </defs>\n          <XAxis dataKey=\"formattedDate\" style={{fontSize: '11px'}} />\n          <YAxis style={{fontSize: '11px'}} />\n          <CartesianGrid stroke=\"#30394C\" strokeDasharray=\"5 5\" />\n          <Tooltip itemStyle={itemStyle} wrapperStyle={wrapperStyle} contentStyle={contentStyle} labelStyle={labelStyle}/>\n          <Legend verticalAlign=\"top\" height={36} wrapperStyle={legendStyle} />\n          <Area type=\"basis\" dataKey=\"confirmed\" name=\"Confirmed\" stroke=\"#30394C\" strokeWidth={2} dot={false} fill=\"none\" />\n          <Area type=\"basis\" dataKey=\"deaths\" name=\"Deaths\" stroke=\"#742A1B\" strokeWidth={2} dot={false} fill=\"none\" />\n          <Area type=\"basis\" dataKey=\"recovered\" name=\"Recovered\" stroke=\"#1B5F5B\" strokeWidth={2} dot={false} fill=\"none\" />\n          <Area type=\"basis\" dataKey=\"active\" name=\"Active Cases\" stroke=\"#21FF9F\" strokeWidth={2} dot={false} fill=\"url(#activeGradient)\" />\n        </AreaChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nexport default CovidChart;\n","import React, { useState, useEffect } from 'react';\nimport CountrySelectorStyles from \"./CountrySelector.module.scss\"\n\nfunction CountrySelector({ country, setCountry }) {\n  const selectedCountries = [\n    { Slug: 'argentina', Country: 'Argentina' },\n    { Slug: 'brazil', Country: 'Brazil' },\n    { Slug: 'chile', Country: 'Chile' },\n    { Slug: 'china', Country: 'China' },\n    { Slug: 'france', Country: 'France' },\n    { Slug: 'italy', Country: 'Italy' },\n    { Slug: 'spain', Country: 'Spain' },\n    { Slug: 'united-states', Country: 'United States' },\n    { Slug: 'united-kingdom', Country: 'United Kingdom' },\n    { Slug: 'uruguay', Country: 'Uruguay' },\n  ];\n\n  const [apiCountries, setApiCountries] = useState([]);\n  const [showSelectedCountries, setshowSelectedCountries] = useState(true);\n\n  useEffect(() => {\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow',\n      from: '2020-03-01T00:00:00Z'\n    };\n\n    fetch(\"https://api.covid19api.com/countries\", requestOptions)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setApiCountries(result.sort((a, b) => a.Country.localeCompare(b.Country)));\n        }\n      )\n  }, []);\n\n  return (\n    <div>\n      {country ? (\n        <ul className={CountrySelectorStyles.list}>\n          {showSelectedCountries ? (\n            selectedCountries.map((item, i) => (\n              <li key={i}>\n                <button\n                  onClick={() => setCountry(item)}\n                  className={item.Slug === country.Slug ? CountrySelectorStyles.active : ''}>\n                  {item.Country}\n                </button>\n              </li>\n            ))\n          ) : (\n            apiCountries.map((item, i) => (\n              <li key={i}>\n                <button\n                  onClick={() => setCountry(item)}\n                  className={item.Slug === country.Slug ? CountrySelectorStyles.active : ''}>\n                  {item.Country}\n                </button>\n              </li>\n            ))\n          )}\n          <li className={showSelectedCountries ? '' : CountrySelectorStyles.fixed}>\n            <button\n              onClick={() => setshowSelectedCountries(!showSelectedCountries)}>\n                {showSelectedCountries ? (\n                  'Show more countries'\n                ) : (\n                  'Show less'\n                )}\n            </button>\n          </li>\n        </ul>\n      ) : null}\n    </div>\n  );\n}\n\nexport default CountrySelector;\n","import React, { useState } from 'react';\nimport appStyles from \"./App.module.scss\"\nimport Container from \"./Container\"\nimport CovidHeader from './CovidHeader';\nimport CovidChart from './CovidChart';\nimport CountrySelector from './CountrySelector';\n\nfunction App() {\n  const [country, setCountry] = useState({\n    Country: 'China',\n    Slug: 'china',\n  });\n\n  return (\n    <Container>\n      <CovidHeader />\n      <div className={appStyles.container}>\n        <CovidChart country={country} setCountry={setCountry} />\n        <CountrySelector country={country} setCountry={setCountry} style={{ 'flexShrink': 1 }}/>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"CountrySelector_list__2mW3C\",\"active\":\"CountrySelector_active__7AXJ-\",\"fixed\":\"CountrySelector_fixed__1L3Dr\"};"],"sourceRoot":""}